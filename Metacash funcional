#Registrar meta

def criar_metas(salario):
    while True:
        
        try:
            valor_meta = float(input("\nüíµ-Qual √© o valor total da sua meta? R$"))
            if valor_meta > salario:
                print("‚ùå-O valor da meta n√£o pode ser maior que o seu sal√°rio! Tente novamente.")
                continue
            elif valor_meta <= 0:
                print("‚ùå-Meta inv√°lida, sua meta n√£o pode ser negativa ou igual a 0. Tente novamente.")
                continue
        except ValueError:
            print("‚ùå-Digite um valor num√©rico v√°lido.")
            continue

        
        try:
            dias = int(input("\n‚è∞-Em quantos dias voc√™ deseja alcan√ßar essa meta? "))
            if dias <= 0:
                print("‚ùå-O n√∫mero de dias deve ser maior que 0. Tente novamente.")
                continue
        except ValueError:
            print("‚ùå-Digite um n√∫mero inteiro v√°lido.")
            continue

        
        meta_diaria = valor_meta / dias
        if meta_diaria > salario * 0.35:
            print("================================================================================================")
            print("‚ö†Ô∏èCUIDADO: Sua meta di√°ria √© maior que 35% do seu sal√°rio. Tente ajustar o valor ou o prazo.‚ö†Ô∏è")
            print("================================================================================================")
            continue
        else:
            print("===============================================")
            print("‚úÖ-Sua meta parece realista, continue assim!üëè")
            print("===============================================")
            break  

    
    print("\n=======================(META)=======================\n")


    if dias < 7:
        print("Voc√™ tem uma meta di√°ria!üìÑ")
        print(f"Meta Di√°ria: R$ {meta_diaria:.2f} por dia")
        resultado = {"Di√°ria": meta_diaria}

    elif dias < 30:
        meta_semanal = valor_meta / (dias // 7)
        print("Voc√™ tem uma meta di√°ria e semanal!üìã")
        print(f"Meta Di√°ria: R$ {meta_diaria:.2f} por dia")
        print(f"Meta Semanal: R$ {meta_semanal:.2f} por semana")
        resultado = {"Di√°ria": meta_diaria, "Semanal": meta_semanal}

    else:
        meta_semanal = meta_diaria * 7
        meta_mensal = meta_diaria * 30
        print("Voc√™ tem uma meta di√°ria, semanal e mensal!üìë")
        print(f"Meta Di√°ria: R$ {meta_diaria:.2f} por dia")
        print(f"Meta Semanal: R$ {meta_semanal:.2f} por semana")
        print(f"Meta Mensal: R$ {meta_mensal:.2f} por m√™s")
        resultado = {"Di√°ria": meta_diaria, "Semanal": meta_semanal, "Mensal": meta_mensal}

    print(f"\nMeta total: R${valor_meta:.2f}")
    print(f"Prazo: {dias} dias")
    print("\n====================================================")

    return resultado, valor_meta, dias


#Registro de Gasto#
def recomendacao_de_gastos():
    def validar_registro_gasto(texto):
            while True:
                try:
                    valor=float(input(texto))
                    if valor <0:
                        print("‚ùå-O valor n√£o pode ser negativo. Tente novamente")
                    else:
                        return valor
                except ValueError:
                    print("‚ùå-Valor inv√°lido. Digite um n√∫mero v√°lido")


    def validar_preferencia(categorias):
                    while True:
                        try:
                            nota= int(input(f"Digite o quanto voc√™ deseja gastar com {categorias}, em umas escala de (1-5)"))
                            if 1<=nota<=5:
                                return nota
                            else:
                                print("‚ùå-Por favor, digite um valor entre 1 e 5")
                        except ValueError:
                            print("‚ùå-Valor inv√°lido. Digite um valor inteiro entre 1 e 5")
                    
                
    def coleta_de_dados():
                print("================================")
                print("Informe seus dados financeiros")
                print("================================")


                salario = validar_registro_gasto("Sal√°rio mensal: R$ ")
                fixos = validar_registro_gasto("Gastos com Custos Fixos: R$ ")
                alimenta√ßao = validar_registro_gasto("Gastos com Alimenta√ß√£o: R$ ")
                lazer = validar_registro_gasto("Gastos com Lazer: R$ ")
                transporte = validar_registro_gasto("Gastos com Transporte: R$ ")
                preferencias= {
                "Alimenta√ß√£o": validar_preferencia("Alimenta√ß√£o"), "Lazer": validar_preferencia("Lazer"),"Transporte": validar_preferencia("Transporte")
                }

                return salario,fixos,{"Alimenta√ß√£o": alimenta√ßao,"Lazer": lazer, "Transporte": transporte}, preferencias
    salario, fixos, gastos, preferencias = coleta_de_dados()
    print("===================================================")
    print("‚úÖSuas informa√ß√µes foram registradas com sucesso!‚úÖ")
    print("===================================================")

def registrar_progresso(meta_info, progresso_total, dias_restantes, valor_meta,salario):
    print("\n================(PROGRESSO DA META)==================")

    faltando = valor_meta - progresso_total
    if faltando < 0:
        faltando = 0

    porcentagem = (progresso_total / valor_meta) * 100
    meta_diaria = meta_info.get("Di√°ria", 0)
    progresso_ideal = (meta_diaria * (dias_restantes))

    print(f"Progresso Atual: R$ {progresso_total:.2f}")
    print(f"Meta Total: R$ {valor_meta:.2f}")
    print(f"Faltando: R$ {faltando:.2f}")
    print(f"Porcentagem Conclu√≠da: {porcentagem:.1f}%")
    print(f"Dias Restantes: {dias_restantes} dia(s)")

   
    if progresso_total > valor_meta:
        print("Parab√©ns! Voc√™ j√° atingiu sua meta! ü•≥")
    elif progresso_total >= (valor_meta - progresso_ideal):
        print("Voc√™ est√° no ritmo certo! Continue assim! ‚úÖ")
    else:
        print("Aten√ß√£o! Voc√™ est√° um pouco atrasado com a meta. ‚ö†Ô∏è")

    meta_info, valor_meta, dias_restantes = criar_metas(salario)
    progresso_total = 0

    while dias_restantes > 0:
        try:
            economizado = float(input("\nüí∞-Quanto voc√™ conseguiu economizar hoje? R$ "))
            if economizado < 0:
                print("‚ùå-Valor inv√°lido! Voc√™ n√£o pode economizar um valor negativo.")
                continue
            progresso_total += economizado
            dias_restantes -= 1
            registrar_progresso(meta_info, progresso_total, dias_restantes, valor_meta)
        except ValueError:
            print("‚ùå-Digite um n√∫mero v√°lido.")
    print("========================================================")
